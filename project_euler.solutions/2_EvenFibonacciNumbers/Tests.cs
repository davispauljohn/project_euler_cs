using NUnit.Framework;
using project_euler.solutions;
using Shouldly;
using System;

namespace project_euler.tests
{
    /// <summary>
    /// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
    /// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    /// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
    /// </summary>
    [TestFixture]
    public class EvenFibonacciNumbersTests
    {
        [Test]
        public void Run_WhenUpperLimitIsThree_ShouldReturnTwo()
        {
            EvenFibonacciNumbers.GetSumOfFibonacciNumbers(3).ShouldBe(2);
        }

        [Test]
        public void Run_WhenUpperLimitIsTen_ShouldReturnTwentyThree()
        {
            EvenFibonacciNumbers.GetSumOfFibonacciNumbers(10).ShouldBe(2 + 8);
        }

        [TestCase(0)]
        [TestCase(1)]
        public void Run_WhenUpperLimitIsLessThanTwo_ShouldThrowInvalidOperationException(int upperLimit)
        {
            Should.Throw<InvalidOperationException>(() => EvenFibonacciNumbers.GetSumOfFibonacciNumbers(upperLimit));
        }

        [Test]
        public void Run_WhenUpperLimitIsTwo_ShouldReturnTwo()
        {
            EvenFibonacciNumbers.GetSumOfFibonacciNumbers(2).ShouldBe(2);
        }

        [Test]
        public void Solution()
        {
            EvenFibonacciNumbers.GetSumOfFibonacciNumbers(4000000).ShouldBe(4613732);
        }
    }
}